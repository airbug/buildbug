//TODO BRN: For now we are including the .buildbug folder in git so that we can simulate what it is like when using
// buildbug to build a project. Later though, we should exclude .buildbug from git since it would all be dynamically
// generated by the buildbug system. If this idea seems strange in this project it's because we're planning to use
// buildbug to build buildbug

var Annotate = require('annotatejs');
var fs = require('fs');
var npm = require('npm');

npm.load({}, function (err) {
    if (err) {
        console.log(err);
        console.log(err.stack);
        process.exit(1);
        return;
    }

    var outputDirPath = './.buildbug/build/buildbug';

    Annotate.compileNodeJs([
        '../bugjs/projects/bugjs/js/src',
        './projects/buildbug/js/src',
        '../annotatejs/projects/runtime/js/src'
    ], outputDirPath + '/lib');

    writePackageJson(outputDirPath, {
        name: "buildbug",
        version: "0.0.1",
        main: "./lib/BuildBug.js",
        dependencies: {
            'annotatejs': 'git+ssh://git@github.com:bneisler/annotatejs.git#master'
        }
    });

    createNodePackage(outputDirPath);
});


function writePackageJson(outputDirPath, packageJson) {
    var packageJsonPath = outputDirPath + '/package.json';
    fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson));
}

function createNodePackage(packageDirPath) {
    npm.commands.pack([packageDirPath], function (err, data) {
        console.log("Packed up node package '" + packageDirPath + "'");
    });
}

/*function createTar(targetPath, outputFilePath) {

}

function scanDirectoryForSourceFiles(directoryPathString) {
    var filePathArray = [];
    var fileStringArray = fs.readdirSync(directoryPathString);
    for (var i = 0, size = fileStringArray.length; i < size; i++) {
        var pathString = directoryPathString + "/" + fileStringArray[i];
        var stat = fs.statSync(pathString);
        if (stat.isDirectory()) {
            var childFilePathArray = scanDirectoryForSourceFiles(pathString);
            filePathArray = filePathArray.concat(childFilePathArray);
        } else if (stat.isFile()) {
            filePathArray.push(pathString);
        }
    }
    return filePathArray;
}  */
